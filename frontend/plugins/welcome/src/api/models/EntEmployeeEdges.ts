/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Patient
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDepartment,
    EntDepartmentFromJSON,
    EntDepartmentFromJSONTyped,
    EntDepartmentToJSON,
    EntPlace,
    EntPlaceFromJSON,
    EntPlaceFromJSONTyped,
    EntPlaceToJSON,
    EntTitlename,
    EntTitlenameFromJSON,
    EntTitlenameFromJSONTyped,
    EntTitlenameToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntEmployeeEdges
 */
export interface EntEmployeeEdges {
    /**
     * 
     * @type {EntDepartment}
     * @memberof EntEmployeeEdges
     */
    department?: EntDepartment;
    /**
     * 
     * @type {EntPlace}
     * @memberof EntEmployeeEdges
     */
    place?: EntPlace;
    /**
     * 
     * @type {EntTitlename}
     * @memberof EntEmployeeEdges
     */
    titlename?: EntTitlename;
}

export function EntEmployeeEdgesFromJSON(json: any): EntEmployeeEdges {
    return EntEmployeeEdgesFromJSONTyped(json, false);
}

export function EntEmployeeEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntEmployeeEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'department': !exists(json, 'Department') ? undefined : EntDepartmentFromJSON(json['Department']),
        'place': !exists(json, 'Place') ? undefined : EntPlaceFromJSON(json['Place']),
        'titlename': !exists(json, 'Titlename') ? undefined : EntTitlenameFromJSON(json['Titlename']),
    };
}

export function EntEmployeeEdgesToJSON(value?: EntEmployeeEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'department': EntDepartmentToJSON(value.department),
        'place': EntPlaceToJSON(value.place),
        'titlename': EntTitlenameToJSON(value.titlename),
    };
}


